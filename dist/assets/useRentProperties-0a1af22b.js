import{s as m,b as q,f as d,g as P}from"./index-fbe74309.js";const y=10;async function g({page:s,sortPrice:t,properyName:e,searchValue:o}){let r=m.from("PropertiesForRent").select("*",{count:"exact"});if(s){const n=(s-1)*y,a=n+y-1;r.range(n,a)}if(t){const[n,a]=t,u=Number(n),f=Number(a);r.gte("price",u),r.lte("price",f),r.order("price",{ascending:!0})}if(e){if(e==="allproperties")return r;r.eq("propertyType",e)}o&&(console.log(o),r.eq("name",o));const{data:p,error:c,count:i}=await r;if(c)throw console.error(c),new Error("properties could not be loaded");return{data:p,count:i}}function h(){const s=q(),[t]=d(),e=t.get("page")?Number(t.get("page")):1,o=t.get("price")||"500-1500",p=o.split("-"),c=t.get("propertyName")||"",i=t.get("query")||"",{isLoading:n,data:{data:a,count:u}={},error:f}=P({queryKey:["rent",e,o,c,i],queryFn:()=>g({page:e,sortPrice:p,properyName:c,searchValue:i})}),l=Math.ceil(u/y);return e<l&&s.prefetchQuery({queryKey:["rent",e+1],queryFn:()=>g({page:e+1})}),e>1&&s.prefetchQuery({queryKey:["rent",e-1],queryFn:()=>g({page:e-1})}),{isLoading:n,rentData:a,count:u}}export{y as P,h as u};
